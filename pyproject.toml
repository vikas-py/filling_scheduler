[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "filling-scheduler"
version = "0.2.0"
description = "Pharmaceutical filling line scheduler with multiple optimization strategies"
readme = "README.md"
requires-python = ">=3.10"
license = {text = "GPL-3.0-or-later"}
authors = [
    {name = "vikas-py", email = "vikas-py@users.noreply.github.com"}
]
maintainers = [
    {name = "vikas-py", email = "vikas-py@users.noreply.github.com"}
]
keywords = ["scheduling", "optimization", "pharmaceutical", "manufacturing", "heuristics"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Manufacturing",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering",
    "Topic :: Office/Business :: Scheduling",
]

dependencies = [
    "pandas>=2.0",
    "pyyaml>=6.0",
    "pydantic>=2.0",
    "pydantic-settings>=2.0",
    "click>=8.0",
    "rich>=13.0",
]

[project.optional-dependencies]
milp = [
    "pulp>=2.7",
]
dev = [
    "pytest>=7.0",
    "pytest-cov>=4.0",
    "pytest-xdist>=3.0",
    "black>=23.0",
    "ruff>=0.1.0",
    "mypy>=1.0",
    "isort>=5.12",
    "pre-commit>=3.0",
]
docs = [
    "sphinx>=7.0",
    "sphinx-rtd-theme>=1.3",
]
all = [
    "filling-scheduler[milp,dev,docs]",
]

[project.scripts]
fillscheduler = "fillscheduler.cli.main:main"

[project.urls]
Homepage = "https://github.com/vikas-py/filling_scheduler"
Repository = "https://github.com/vikas-py/filling_scheduler"
Issues = "https://github.com/vikas-py/filling_scheduler/issues"

[tool.setuptools]
packages = ["fillscheduler", "fillscheduler.strategies", "fillscheduler.cli"]
package-dir = {"" = "src"}

[tool.setuptools.package-data]
fillscheduler = ["py.typed"]

[tool.pytest.ini_options]
testpaths = ["tests"]
pythonpath = ["src"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "-ra",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]

[tool.coverage.run]
source = ["fillscheduler"]
omit = [
    "*/tests/*",
    "*/examples/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]

[tool.black]
line-length = 100
target-version = ["py310", "py311", "py312"]
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.ruff]
line-length = 100
target-version = "py310"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long (handled by black)
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex (we'll address this gradually)
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]  # Allow unused imports in __init__.py

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false  # Set to true gradually
disallow_any_generics = true
disallow_subclassing_any = true
disallow_untyped_calls = false  # Set to true gradually
disallow_incomplete_defs = true
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "pulp.*",
]
ignore_missing_imports = true
