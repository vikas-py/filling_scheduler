from __future__ import annotations

from pathlib import Path

import pandas as pd

from .config import AppConfig
from .io_utils import activities_to_dataframe
from .models import Activity


def print_summary(
    kpis: dict, errors: list[str], warnings: list[str], schedule_csv: Path, summary_txt: Path
) -> None:
    print("\n=== Schedule KPIs ===")
    for k, v in kpis.items():
        print(f"{k}: {v}")

    if errors:
        print("\n=== ERRORS ===")
        for e in errors:
            print(f"- {e}")
    if warnings:
        print("\n=== WARNINGS ===")
        for w in warnings:
            print(f"- {w}")

    print(f"\nSaved schedule to: {schedule_csv}")
    print(f"Saved summary to : {summary_txt}")


def write_html_report(
    activities: list[Activity],
    kpis: dict,
    errors: list[str],
    warnings: list[str],
    path: Path,
    cfg: AppConfig,
) -> None:
    df_sched: pd.DataFrame = activities_to_dataframe(activities, cfg)

    kpi_df = pd.DataFrame(
        [{"Metric": k, "Value": v} for k, v in kpis.items()], columns=["Metric", "Value"]
    )

    css = """
    body { font-family: Arial, Helvetica, sans-serif; margin: 24px; }
    h1 { margin-bottom: 0; }
    .muted { color: #666; margin-top: 4px; }
    table { border-collapse: collapse; width: 100%; margin: 16px 0; }
    th, td { border: 1px solid #ddd; padding: 8px; }
    th { background: #f5f5f5; text-align: left; }
    tr:nth-child(even) { background: #fafafa; }
    .badge { display: inline-block; padding: 2px 8px; border-radius: 10px; font-size: 12px; }
    .b-clean { background: #e3f2fd; }
    .b-chg { background: #fff3e0; }
    .b-fill { background: #e8f5e9; }
    .section { margin-top: 24px; }
    .errors li { color: #b71c1c; }
    .warnings li { color: #e65100; }
    """

    def badge(kind: str) -> str:
        if kind == "CLEAN":
            return '<span class="badge b-clean">CLEAN</span>'
        if kind == "CHANGEOVER":
            return '<span class="badge b-chg">CHANGEOVER</span>'
        return '<span class="badge b-fill">FILL</span>'

    df_html = df_sched.copy()
    df_html["Activity"] = df_html["Activity"].map(badge)

    html = f"""<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="utf-8" />
<title>Filling Schedule Report</title>
<style>{css}</style>
</head>
<body>
  <h1>Filling Schedule Report</h1>
  <div class="muted">Generated by filling_scheduler</div>

  <div class="section">
    <h2>Summary KPIs</h2>
    {kpi_df.to_html(index=False, escape=False)}
  </div>

  <div class="section">
    <h2>Schedule</h2>
    {df_html.to_html(index=False, escape=False)}
  </div>

  <div class="section">
    <h2>Validation</h2>
    {"<p>No errors.</p>" if not errors else "<ul class='errors'>" + "".join(f"<li>{e}</li>" for e in errors) + "</ul>"}
    {"<p>No warnings.</p>" if not warnings else "<ul class='warnings'>" + "".join(f"<li>{w}</li>" for w in warnings) + "</ul>"}
  </div>
</body>
</html>"""

    path.write_text(html, encoding="utf-8")
